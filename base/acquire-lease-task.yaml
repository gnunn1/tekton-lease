apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: acquire-lease
spec:
  params:
  - name: lease-name
    type: string
  - name: timeout
    type: string
    default: 20m
  - name: owner
    type: string
  steps:
    - name: create-lease
      image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
      script: |

        # EOF in yaml is hard, so make a file the simple way
        echo "apiVersion: demo.redhat.io/v1" > e2e-lease.yaml
        echo "kind: Lease" >> e2e-lease.yaml
        echo "metadata:" >> e2e-lease.yaml
        echo "  name: $(params.lease-name)" >> e2e-lease.yaml
        echo "spec:" >> e2e-lease.yaml
        echo "  owner: $(params.owner) " >> e2e-lease.yaml
        echo "  created: $(date)" >> e2e-lease.yaml

        # Try to create a lease — either it succeeds, and we are good, or it fails, and then we wait for the lease to be deleted or a timeout, and then we make the lease if there was a deletion
        # In the event of a timeout, clear out the dead lease so it doesn't mess up future builds

        kubectl create -f e2e-lease.yaml || (echo Waiting for lease && kubectl wait --for=delete lease.demo.redhat.io/$(params.lease-name) --timeout=$(params.timeout) || ( echo “Grabbing abandoned lease.” && kubectl delete lease.demo.redhat.io/$(params.lease-name) ))

        # We could be here for three reasons;
        # either we successfully created a lease,
        # we waited and another run's lease got deleted,
        # or we waited and the other lease is still there.
        # Run an apply to make sure a lease with our name and label now exists.

        # We have to check first in case there is already an old lease
        if ! oc get le $(params.LEASE_NAME) -o yaml;
          then
            echo "Hey!!! There isn't any lease."
            while ! kubectl create -f e2e-lease.yaml
            do
              # If the loop runs is because there is already a lease and it belongs to other pipeline run (you can check the owner field)
              echo Waiting for lease
              kubectl wait --for=delete lease.redhat.com/$(params.LEASE_NAME) --timeout=20m
            done
          else
            # If this block gets executed is because the release lease task either wasn't executed or got some error. So we delete the old one and create a brand-new.
            echo “Grabbing abandoned lease.”
            kubectl delete lease.demo.redhat.io/$(params.lease-name)
            echo "Creating a brand-new one."
            kubectl apply -f e2e-lease.yaml
        fi
